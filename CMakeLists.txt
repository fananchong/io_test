CMAKE_MINIMUM_REQUIRED(VERSION 2.6)

PROJECT(io_test)

MESSAGE(STATUS "This is SOURCE dir " ${PROJECT_SOURCE_DIR})

# C++11 or c++0x detected  
include(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
if(COMPILER_SUPPORTS_CXX11)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
elseif(COMPILER_SUPPORTS_CXX0X)
    set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
else()
        message(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
endif()

set(ALL_FLAGS_IN_ONE_COMMON "-Wall -std=gnu++11 -fPIC -rdynamic")
set(CMAKE_CXX_FLAGS_DEBUG "$ENV{CXXFLAGS} ${ALL_FLAGS_IN_ONE_COMMON} -g -ggdb -O0")
set(CMAKE_CXX_FLAGS_RELEASE "$ENV{CXXFLAGS} ${ALL_FLAGS_IN_ONE_COMMON} -O3")
set(CMAKE_CXX_FLAGS_RELWITHDEBINFO "$ENV{CXXFLAGS} ${ALL_FLAGS_IN_ONE_COMMON} -g -ggdb")
set(CMAKE_CXX_FLAGS_MINSIZEREL "$ENV{CXXFLAGS} ${ALL_FLAGS_IN_ONE_COMMON} -Os")

INCLUDE_DIRECTORIES(${PROJECT_SOURCE_DIR}/)

set(EXECUTABLE_OUTPUT_PATH ~/io_test/bin)

#ADD_SUBDIRECTORY()

SET(APP "io_test")
FILE(GLOB SRC_LISTS *.cpp *.hpp)
ADD_EXECUTABLE(${APP} ${SRC_LISTS})
TARGET_LINK_LIBRARIES(${APP})
